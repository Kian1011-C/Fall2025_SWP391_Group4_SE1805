import React, { useState, useEffect } from 'react';
import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
import L from 'leaflet';
import 'leaflet/dist/leaflet.css';
import './App.css';

// Fix default markers for React Leaflet
delete L.Icon.Default.prototype._getIconUrl;
L.Icon.Default.mergeOptions({
  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',
  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',
  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
});

function App() {
  const [currentUser, setCurrentUser] = useState(null);
  const [showLoginModal, setShowLoginModal] = useState(false);
  const [showRegisterModal, setShowRegisterModal] = useState(false);
  const [currentView, setCurrentView] = useState('landing');
  const [dashboardTab, setDashboardTab] = useState('home');
  const [swapStep, setSwapStep] = useState(1);
  const [paymentTab, setPaymentTab] = useState('top-up');
  const [selectedStation, setSelectedStation] = useState(null);
  const [selectedPole, setSelectedPole] = useState(null);
  const [selectedPickupSlot, setSelectedPickupSlot] = useState(null);
  const [selectedReturnSlot, setSelectedReturnSlot] = useState(null);
  const [userLocation, setUserLocation] = useState({ lat: 10.7769, lng: 106.7009 });
  const [batteryData, setBatteryData] = useState({
    current: 25,
    health: 92,
    temperature: 28,
    voltage: 48.2,
    cycles: 156
  });
  
  // Demo accounts data
  const demoAccounts = {
    driver: [
      { email: 'driver1@example.com', password: '123456', name: 'Nguy·ªÖn VƒÉn A' },
      { email: 'driver2@example.com', password: '123456', name: 'Tr·∫ßn Th·ªã B' },
      { email: 'driver3@example.com', password: '123456', name: 'L√™ VƒÉn C' }
    ],
    staff: [
      { email: 'staff1@station.com', password: '123456', name: 'Ph·∫°m VƒÉn D' },
      { email: 'staff2@station.com', password: '123456', name: 'Ho√†ng Th·ªã E' }
    ],
    admin: [
      { email: 'admin@swp201.com', password: 'admin123', name: 'Admin System' }
    ]
  };

  const [notifications, setNotifications] = useState([
    {
      id: 1,
      type: 'info',
      title: 'Tr·∫°m m·ªõi',
      message: 'Tr·∫°m s·∫°c Station 15 ƒë√£ m·ªü t·∫°i Qu·∫≠n 7',
      time: '2 ph√∫t tr∆∞·ªõc',
      unread: true
    },
    {
      id: 2,
      type: 'warning',
      title: 'Pin s·∫Øp h·∫øt',
      message: 'Pin hi·ªán t·∫°i c√≤n 15%. T√¨m tr·∫°m ƒë·ªïi pin g·∫ßn nh·∫•t?',
      time: '5 ph√∫t tr∆∞·ªõc',
      unread: true
    },
    {
      id: 3,
      type: 'success',
      title: 'ƒê·ªïi pin th√†nh c√¥ng',
      message: 'B·∫°n ƒë√£ ƒë·ªïi pin th√†nh c√¥ng t·∫°i Station 8',
      time: '1 gi·ªù tr∆∞·ªõc',
      unread: false
    }
  ]);

  // Functions
  const showToast = (message, type = 'success') => {
    const toast = document.createElement('div');
    toast.className = `toast ${type} show`;
    toast.textContent = message;
    document.body.appendChild(toast);
    setTimeout(() => {
      document.body.removeChild(toast);
    }, 3000);
  };

  const handleLogin = (email, password) => {
    // Check demo accounts
    for (const role in demoAccounts) {
      const account = demoAccounts[role].find(acc => acc.email === email && acc.password === password);
      if (account) {
        setCurrentUser({ ...account, role });
        setShowLoginModal(false);
        setCurrentView('dashboard');
        showToast(`ƒêƒÉng nh·∫≠p th√†nh c√¥ng! Ch√†o m·ª´ng ${account.name}`);
        return;
      }
    }
    showToast('Sai email ho·∫∑c m·∫≠t kh·∫©u!', 'error');
  };

  const handleLogout = () => {
    setCurrentUser(null);
    setCurrentView('landing');
    setDashboardTab('home');
    showToast('ƒê√£ ƒëƒÉng xu·∫•t th√†nh c√¥ng!');
  };

  const markNotificationAsRead = (id) => {
    setNotifications(prev => prev.map(notif => 
      notif.id === id ? { ...notif, unread: false } : notif
    ));
  };

  // Mock data
  const vehicleData = {
    model: 'VinFast Feliz',
    licensePlate: '59H1-12345',
    year: 2023,
    batteryCapacity: '48V 20Ah',
    registrationDate: '15/03/2023'
  };

  const subscriptionData = {
    plan: 'Premium',
    status: 'ƒêang ho·∫°t ƒë·ªông',
    swapsLeft: 28,
    totalSwaps: 50,
    expiryDate: '15/12/2024',
    monthlyFee: 299000
  };

  const paymentHistory = [
    { id: 1, date: '15/11/2024', type: 'N·∫°p ti·ªÅn', amount: 500000, status: 'Th√†nh c√¥ng' },
    { id: 2, date: '10/11/2024', type: 'ƒê·ªïi pin', amount: -15000, status: 'Th√†nh c√¥ng' },
    { id: 3, date: '05/11/2024', type: 'Ph√≠ thu√™ bao', amount: -299000, status: 'Th√†nh c√¥ng' }
  ];

  const nearbyStations = [
    { 
      id: 1, 
      name: 'Station 1', 
      distance: '0.5km', 
      available: 5, 
      total: 8, 
      status: 'Ho·∫°t ƒë·ªông',
      waitTime: 3,
      fullBatteries: 5,
      chargingBatteries: 2,
      emptyBatteries: 1,
      lat: 10.7769,
      lng: 106.7009,
      address: '123 Nguy·ªÖn VƒÉn Linh, Q7, TP.HCM',
      poles: [
        { id: 1, name: 'Tr·ª• A', slots: 10, fullSlots: 4, chargingSlots: 3, emptySlots: 3 },
        { id: 2, name: 'Tr·ª• B', slots: 10, fullSlots: 3, chargingSlots: 4, emptySlots: 3 }
      ]
    },
    { 
      id: 2, 
      name: 'Station 2', 
      distance: '1.2km', 
      available: 6, 
      total: 12, 
      status: 'Ho·∫°t ƒë·ªông',
      waitTime: 8,
      fullBatteries: 6,
      chargingBatteries: 4,
      emptyBatteries: 2,
      lat: 10.7829,
      lng: 106.6934,
      address: '456 L√™ VƒÉn L∆∞∆°ng, Q7, TP.HCM',
      poles: [
        { id: 1, name: 'Tr·ª• A', slots: 8, fullSlots: 3, chargingSlots: 2, emptySlots: 3 },
        { id: 2, name: 'Tr·ª• B', slots: 8, fullSlots: 2, chargingSlots: 3, emptySlots: 3 },
        { id: 3, name: 'Tr·ª• C', slots: 6, fullSlots: 1, chargingSlots: 2, emptySlots: 3 }
      ]
    },
    { 
      id: 3, 
      name: 'Station 3', 
      distance: '2.1km', 
      available: 4, 
      total: 8, 
      status: 'Ho·∫°t ƒë·ªông',
      waitTime: 5,
      fullBatteries: 4,
      chargingBatteries: 3,
      emptyBatteries: 1,
      lat: 10.7892,
      lng: 106.7100,
      address: '789 Hu·ª≥nh T·∫•n Ph√°t, Q7, TP.HCM',
      poles: [
        { id: 1, name: 'Tr·ª• A', slots: 6, fullSlots: 2, chargingSlots: 2, emptySlots: 2 },
        { id: 2, name: 'Tr·ª• B', slots: 8, fullSlots: 2, chargingSlots: 3, emptySlots: 3 }
      ]
    },
    { 
      id: 4, 
      name: 'Station 4', 
      distance: '3.5km', 
      available: 3, 
      total: 6, 
      status: 'Ho·∫°t ƒë·ªông',
      waitTime: 12,
      fullBatteries: 3,
      chargingBatteries: 2,
      emptyBatteries: 1,
      lat: 10.7650,
      lng: 106.6800,
      address: '321 Nguy·ªÖn H·ªØu Th·ªç, Q7, TP.HCM',
      poles: [
        { id: 1, name: 'Tr·ª• A', slots: 6, fullSlots: 2, chargingSlots: 2, emptySlots: 2 },
        { id: 2, name: 'Tr·ª• B', slots: 6, fullSlots: 1, chargingSlots: 3, emptySlots: 2 }
      ]
    },
    { 
      id: 5, 
      name: 'Station 5', 
      distance: '4.2km', 
      available: 7, 
      total: 15, 
      status: 'Ho·∫°t ƒë·ªông',
      waitTime: 6,
      fullBatteries: 7,
      chargingBatteries: 5,
      emptyBatteries: 3,
      lat: 10.7950,
      lng: 106.7200,
      address: '654 V√µ VƒÉn Ki·ªát, Q5, TP.HCM',
      poles: [
        { id: 1, name: 'Tr·ª• A', slots: 10, fullSlots: 4, chargingSlots: 3, emptySlots: 3 },
        { id: 2, name: 'Tr·ª• B', slots: 8, fullSlots: 2, chargingSlots: 4, emptySlots: 2 },
        { id: 3, name: 'Tr·ª• C', slots: 7, fullSlots: 1, chargingSlots: 3, emptySlots: 3 }
      ]
    },
    { 
      id: 6, 
      name: 'Station 6', 
      distance: '5.8km', 
      available: 2, 
      total: 6, 
      status: 'B·∫£o tr√¨',
      waitTime: 0,
      fullBatteries: 0,
      chargingBatteries: 0,
      emptyBatteries: 6,
      lat: 10.7600,
      lng: 106.7300,
      address: '987 Tr·∫ßn H∆∞ng ƒê·∫°o, Q1, TP.HCM',
      poles: [
        { id: 1, name: 'Tr·ª• A', slots: 6, fullSlots: 0, chargingSlots: 0, emptySlots: 6 },
        { id: 2, name: 'Tr·ª• B', slots: 6, fullSlots: 0, chargingSlots: 0, emptySlots: 6 }
      ]
    }
  ];

  // Calculate distance between two points
  const calculateDistance = (lat1, lng1, lat2, lng2) => {
    const R = 6371; // Earth's radius in km
    const dLat = (lat2 - lat1) * Math.PI / 180;
    const dLng = (lng2 - lng1) * Math.PI / 180;
    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
              Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
              Math.sin(dLng/2) * Math.sin(dLng/2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
    const distance = R * c;
    return distance < 1 ? `${Math.round(distance * 1000)}m` : `${distance.toFixed(1)}km`;
  };

  // Map Component
  const StationMap = () => {
    const center = [userLocation.lat, userLocation.lng];
    
    const getCurrentLocation = () => {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            const newLocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            setUserLocation(newLocation);
            showToast('ƒê√£ c·∫≠p nh·∫≠t v·ªã tr√≠ hi·ªán t·∫°i!', 'success');
          },
          (error) => {
            showToast('Kh√¥ng th·ªÉ l·∫•y v·ªã tr√≠. S·ª≠ d·ª•ng v·ªã tr√≠ m·∫∑c ƒë·ªãnh.', 'warning');
          }
        );
      } else {
        showToast('Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ ƒë·ªãnh v·ªã!', 'error');
      }
    };
    
    return (
      <div>
        <div style={{ marginBottom: '16px', textAlign: 'center' }}>
          <button className="btn btn-primary" onClick={getCurrentLocation}>
            üìç L·∫•y v·ªã tr√≠ hi·ªán t·∫°i
          </button>
        </div>
        <div className="map-container" style={{ height: '400px', borderRadius: '12px', overflow: 'hidden' }}>
          <MapContainer 
            center={center} 
            zoom={13} 
            style={{ height: '100%', width: '100%' }}
          >
            <TileLayer
              url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
              attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            />
            
            {/* User location marker */}
            <Marker position={[userLocation.lat, userLocation.lng]}>
              <Popup>
                <div style={{ minWidth: '150px', textAlign: 'center' }}>
                  <h4 style={{ margin: '0 0 8px 0', color: '#4F8CFF' }}>üìç V·ªã tr√≠ c·ªßa b·∫°n</h4>
                  <p style={{ margin: '4px 0', fontSize: '13px', color: '#666' }}>
                    T·ªça ƒë·ªô: {userLocation.lat.toFixed(4)}, {userLocation.lng.toFixed(4)}
                  </p>
                </div>
              </Popup>
            </Marker>

            {/* Station markers */}
            {nearbyStations.map(station => {
              const distance = calculateDistance(userLocation.lat, userLocation.lng, station.lat, station.lng);
              return (
                <Marker key={station.id} position={[station.lat, station.lng]}>
                  <Popup>
                    <div style={{ minWidth: '250px' }}>
                      <h4 style={{ margin: '0 0 8px 0', color: '#333' }}>{station.name}</h4>
                      <p style={{ margin: '4px 0', fontSize: '13px', color: '#666' }}>
                        üìç {station.address}
                      </p>
                      <p style={{ margin: '4px 0', fontSize: '13px', color: '#4F8CFF' }}>
                        üìè Kho·∫£ng c√°ch: <strong>{distance}</strong>
                      </p>
                      <p style={{ margin: '4px 0', fontSize: '13px', color: station.status === 'Ho·∫°t ƒë·ªông' ? '#19c37d' : '#ff4757' }}>
                        ‚óè {station.status}
                      </p>
                      <p style={{ margin: '4px 0', fontSize: '13px', color: '#666' }}>
                        üîã {station.available}/{station.total} pin c√≥ s·∫µn
                      </p>
                      <p style={{ margin: '4px 0', fontSize: '13px', color: '#666' }}>
                        üèóÔ∏è {station.poles.length} tr·ª• s·∫°c
                      </p>
                      {station.status === 'Ho·∫°t ƒë·ªông' && (
                        <>
                          <p style={{ margin: '4px 0', fontSize: '13px', color: '#666' }}>
                            ‚è±Ô∏è Th·ªùi gian ch·ªù: ~{station.waitTime} ph√∫t
                          </p>
                          <div style={{ marginTop: '8px', fontSize: '12px' }}>
                            <span style={{ color: '#19c37d', marginRight: '8px' }}>‚óè {station.fullBatteries} ƒë·∫ßy</span>
                            <span style={{ color: '#ffa500', marginRight: '8px' }}>‚óè {station.chargingBatteries} s·∫°c</span>
                            <span style={{ color: '#ff4757' }}>‚óè {station.emptyBatteries} tr·ªëng</span>
                          </div>
                        </>
                      )}
                    </div>
                  </Popup>
                </Marker>
              );
            })}
          </MapContainer>
        </div>
      </div>
    );
  };

  // Components
  const LandingPage = () => (
    <div id="landing">
      <header>
        <div className="container">
          <nav className="nav">
            <div className="brand">
              <div className="logo">
                <svg viewBox="0 0 24 24">
                  <path d="M13 3l3.5 6L12 11.5 8.5 9 13 3zm4.5 9L16 14.5 12 17l-4-2.5 1.5-2.5 4.5 2.5L17.5 12zM12 19l-7.5-12L3 5l9 14 9-14-1.5 2L12 19z"/>
                </svg>
              </div>
              SWP201
            </div>
            <div className="nav-links">
              <a href="#features">T√≠nh nƒÉng</a>
              <a href="#pricing">G√≥i d·ªãch v·ª•</a>
              <a href="#about">V·ªÅ ch√∫ng t√¥i</a>
            </div>
            <div className="auth-buttons">
              <button className="btn" onClick={() => setShowLoginModal(true)}>ƒêƒÉng nh·∫≠p</button>
              <button className="btn btn-primary" onClick={() => setShowRegisterModal(true)}>ƒêƒÉng k√Ω</button>
            </div>
          </nav>
        </div>
      </header>

      <main>
        <div className="hero">
          <div className="container">
            <div className="eyebrow">
              ‚ö° H·ªá th·ªëng ƒë·ªïi pin th√¥ng minh
            </div>
            <h1 className="title">
              ƒê·ªïi pin xe ƒëi·ªán <strong>nhanh ch√≥ng</strong><br/>
              v√† <strong>ti·ªán l·ª£i</strong>
            </h1>
            <p className="subtitle">
              Gi·∫£i ph√°p ƒë·ªïi pin t·ª± ƒë·ªông cho xe ƒëi·ªán v·ªõi m·∫°ng l∆∞·ªõi tr·∫°m s·∫°c r·ªông kh·∫Øp th√†nh ph·ªë. 
              Ch·ªâ 3 ph√∫t ƒë·ªÉ c√≥ pin ƒë·∫ßy 100%.
            </p>
            <div className="hero-actions">
              <button className="btn btn-primary" onClick={() => setShowRegisterModal(true)}>
                B·∫Øt ƒë·∫ßu ngay
              </button>
              <button className="btn" onClick={() => setShowLoginModal(true)}>
                ƒêƒÉng nh·∫≠p
              </button>
            </div>
          </div>
        </div>

        <section id="features">
          <div className="container">
            <h2>T√≠nh nƒÉng n·ªïi b·∫≠t</h2>
            <div className="grid">
              <div className="card">
                <div className="icon">‚ö°</div>
                <h3>ƒê·ªïi pin si√™u nhanh</h3>
                <p className="muted">Ch·ªâ 3 ph√∫t ƒë·ªÉ ƒë·ªïi pin, nhanh h∆°n vi·ªác ƒë·ªï xƒÉng truy·ªÅn th·ªëng</p>
              </div>
              <div className="card">
                <div className="icon">üìç</div>
                <h3>M·∫°ng l∆∞·ªõi r·ªông kh·∫Øp</h3>
                <p className="muted">H∆°n 50 tr·∫°m ƒë·ªïi pin tr√™n to√†n th√†nh ph·ªë</p>
              </div>
              <div className="card featured">
                <div className="icon">üì±</div>
                <h3>·ª®ng d·ª•ng th√¥ng minh</h3>
                <p className="muted">Theo d√µi pin, t√¨m tr·∫°m, thanh to√°n t·ª± ƒë·ªông</p>
              </div>
            </div>
          </div>
        </section>

        <section id="pricing">
          <div className="container">
            <h2>G√≥i d·ªãch v·ª•</h2>
            <div className="pricing">
              <div className="card">
                <h3>Basic</h3>
                <div className="price">99,000‚Ç´<span className="muted">/th√°ng</span></div>
                <ul className="clean">
                  <li><span className="tick">‚úì</span> 10 l·∫ßn ƒë·ªïi pin/th√°ng</li>
                  <li><span className="tick">‚úì</span> ·ª®ng d·ª•ng c∆° b·∫£n</li>
                  <li><span className="tick">‚úì</span> H·ªó tr·ª£ 24/7</li>
                </ul>
                <button className="btn btn-primary">Ch·ªçn g√≥i</button>
              </div>
              <div className="card featured">
                <h3>Plus <span className="chip">Ph·ªï bi·∫øn</span></h3>
                <div className="price">199,000‚Ç´<span className="muted">/th√°ng</span></div>
                <ul className="clean">
                  <li><span className="tick">‚úì</span> 30 l·∫ßn ƒë·ªïi pin/th√°ng</li>
                  <li><span className="tick">‚úì</span> ·ª®ng d·ª•ng ƒë·∫ßy ƒë·ªß</li>
                  <li><span className="tick">‚úì</span> ∆Øu ti√™n ƒë·ªïi pin</li>
                  <li><span className="tick">‚úì</span> H·ªó tr·ª£ ∆∞u ti√™n</li>
                </ul>
                <button className="btn btn-primary">Ch·ªçn g√≥i</button>
              </div>
              <div className="card">
                <h3>Premium</h3>
                <div className="price">299,000‚Ç´<span className="muted">/th√°ng</span></div>
                <ul className="clean">
                  <li><span className="tick">‚úì</span> Kh√¥ng gi·ªõi h·∫°n ƒë·ªïi pin</li>
                  <li><span className="tick">‚úì</span> T√≠nh nƒÉng cao c·∫•p</li>
                  <li><span className="tick">‚úì</span> ƒê·∫∑t tr∆∞·ªõc tr·∫°m ƒë·ªïi</li>
                  <li><span className="tick">‚úì</span> H·ªó tr·ª£ VIP</li>
                </ul>
                <button className="btn btn-primary">Ch·ªçn g√≥i</button>
              </div>
            </div>
          </div>
        </section>
      </main>
    </div>
  );

  const LoginModal = () => (
    <div className="modal" style={{ display: showLoginModal ? 'block' : 'none' }}>
      <div className="modal-content">
        <div className="modal-header">
          <h3>ƒêƒÉng nh·∫≠p</h3>
          <button className="close-btn" onClick={() => setShowLoginModal(false)}>√ó</button>
        </div>
        <form onSubmit={(e) => {
          e.preventDefault();
          const formData = new FormData(e.target);
          handleLogin(formData.get('email'), formData.get('password'));
        }}>
          <div className="form-group">
            <label>Email</label>
            <input type="email" name="email" required />
          </div>
          <div className="form-group">
            <label>M·∫≠t kh·∫©u</label>
            <input type="password" name="password" required />
          </div>
          <div className="form-actions">
            <button type="button" className="btn" onClick={() => setShowLoginModal(false)}>
              H·ªßy
            </button>
            <button type="submit" className="btn btn-primary">
              ƒêƒÉng nh·∫≠p
            </button>
          </div>
        </form>
        <div className="demo-accounts">
          <h4>T√†i kho·∫£n demo:</h4>
          <div className="demo-grid">
            {Object.entries(demoAccounts).map(([role, accounts]) => 
              accounts.map((account, index) => (
                <div
                  key={`${role}-${index}`}
                  className="demo-btn"
                  onClick={() => handleLogin(account.email, account.password)}
                >
                  {role.charAt(0).toUpperCase() + role.slice(1)} {index + 1}
                </div>
              ))
            )}
          </div>
        </div>
      </div>
    </div>
  );

  const RegisterModal = () => (
    <div className="modal" style={{ display: showRegisterModal ? 'block' : 'none' }}>
      <div className="modal-content">
        <div className="modal-header">
          <h3>ƒêƒÉng k√Ω t√†i kho·∫£n</h3>
          <button className="close-btn" onClick={() => setShowRegisterModal(false)}>√ó</button>
        </div>
        <form onSubmit={(e) => {
          e.preventDefault();
          showToast('ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p.');
          setShowRegisterModal(false);
          setShowLoginModal(true);
        }}>
          <div className="form-row">
            <div className="form-group">
              <label>H·ªç v√† t√™n</label>
              <input type="text" required />
            </div>
            <div className="form-group">
              <label>S·ªë ƒëi·ªán tho·∫°i</label>
              <input type="tel" required />
            </div>
          </div>
          <div className="form-group">
            <label>Email</label>
            <input type="email" required />
          </div>
          <div className="form-row">
            <div className="form-group">
              <label>M·∫≠t kh·∫©u</label>
              <input type="password" required />
            </div>
            <div className="form-group">
              <label>X√°c nh·∫≠n m·∫≠t kh·∫©u</label>
              <input type="password" required />
            </div>
          </div>
          <div className="form-group">
            <label>Lo·∫°i t√†i kho·∫£n</label>
            <select required>
              <option value="driver">Ng∆∞·ªùi d√πng (Driver)</option>
              <option value="staff">Nh√¢n vi√™n (Staff)</option>
            </select>
          </div>
          <div className="form-actions">
            <button type="button" className="btn" onClick={() => setShowRegisterModal(false)}>
              H·ªßy
            </button>
            <button type="submit" className="btn btn-primary">
              ƒêƒÉng k√Ω
            </button>
          </div>
        </form>
      </div>
    </div>
  );

  const Dashboard = () => {
    const unreadCount = notifications.filter(n => n.unread).length;

    const DashboardHeader = () => (
      <header className="dashboard-header">
        <div className="container">
          <div className="dashboard-nav">
            <div className="brand">
              <div className="logo">
                <svg viewBox="0 0 24 24">
                  <path d="M13 3l3.5 6L12 11.5 8.5 9 13 3zm4.5 9L16 14.5 12 17l-4-2.5 1.5-2.5 4.5 2.5L17.5 12zM12 19l-7.5-12L3 5l9 14 9-14-1.5 2L12 19z"/>
                </svg>
              </div>
              SWP201 - {currentUser.role === 'driver' ? 'Ng∆∞·ªùi d√πng' : currentUser.role === 'staff' ? 'Nh√¢n vi√™n' : 'Qu·∫£n tr·ªã'}
            </div>
            <div className="user-info">
              <div className="user-avatar">{currentUser.name[0]}</div>
              <span>{currentUser.name}</span>
              <button className="logout-btn" onClick={handleLogout}>
                ƒêƒÉng xu·∫•t
              </button>
            </div>
          </div>
        </div>
      </header>
    );

    if (currentUser.role === 'driver') {
      return (
        <div className="dashboard active">
          <DashboardHeader />
          <div className="user-nav">
            <div className="container">
              <div className="nav-tabs">
                <button 
                  className={`nav-tab ${dashboardTab === 'home' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('home')}
                >
                  üè† Trang ch·ªß
                </button>
                <button 
                  className={`nav-tab ${dashboardTab === 'vehicle' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('vehicle')}
                >
                  ÔøΩ Xe & Pin c·ªßa t√¥i
                </button>
                <button 
                  className={`nav-tab ${dashboardTab === 'subscription' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('subscription')}
                >
                  üìã G√≥i d·ªãch v·ª•
                </button>
                <button 
                  className={`nav-tab ${dashboardTab === 'swap' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('swap')}
                >
                  ‚ö° ƒê·ªïi pin
                </button>
                <button 
                  className={`nav-tab ${dashboardTab === 'payment' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('payment')}
                >
                  üí≥ Thanh to√°n
                </button>
                <button 
                  className={`nav-tab ${dashboardTab === 'support' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('support')}
                >
                  üí¨ H·ªó tr·ª£
                </button>
                <button 
                  className={`nav-tab ${dashboardTab === 'settings' ? 'active' : ''}`}
                  onClick={() => setDashboardTab('settings')}
                >
                  ‚öôÔ∏è C√†i ƒë·∫∑t
                </button>
              </div>
            </div>
          </div>
          <div className="container">
            <div className="dashboard-content">
              
              {/* Home Tab */}
              <div className={`tab-content ${dashboardTab === 'home' ? 'active' : ''}`}>
                <div className="stats-grid">
                  <div className="card">
                    <h4>üîã M·ª©c pin hi·ªán t·∫°i</h4>
                    <div className="price">{batteryData.current}%</div>
                    <p className="muted">C√≤n kho·∫£ng 25km</p>
                  </div>
                  <div className="card">
                    <h4>üìç Tr·∫°m g·∫ßn nh·∫•t</h4>
                    <div className="price">0.5km</div>
                    <p className="muted">Station 1 - 5 pin</p>
                  </div>
                  <div className="card">
                    <h4>üí∞ S·ªë d∆∞</h4>
                    <div className="price">485,000‚Ç´</div>
                    <p className="muted">+50,000‚Ç´ h√¥m qua</p>
                  </div>
                  <div className="card">
                    <h4>üìä L·∫ßn ƒë·ªïi c√≤n l·∫°i</h4>
                    <div className="price">{subscriptionData.swapsLeft}</div>
                    <p className="muted">G√≥i {subscriptionData.plan}</p>
                  </div>
                </div>
                
                <div className="grid" style={{gridTemplateColumns: '2fr 1fr', gap: '24px'}}>
                  <div className="card">
                    <h3>üó∫Ô∏è B·∫£n ƒë·ªì tr·∫°m ƒë·ªïi pin</h3>
                    <StationMap />
                    <div className="grid" style={{gridTemplateColumns: 'repeat(3, 1fr)', gap: '12px'}}>
                      {nearbyStations.map(station => (
                        <div key={station.id} className="card" style={{padding: '12px'}}>
                          <h4>{station.name}</h4>
                          <p className="muted">{station.distance}</p>
                          <p className="muted">{station.available}/{station.total} pin</p>
                          <span className={`chip ${station.status === 'Ho·∫°t ƒë·ªông' ? 'success' : 'warning'}`}>{station.status}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <div className="card">
                    <h3>üîî Th√¥ng b√°o m·ªõi</h3>
                    {notifications.slice(0, 3).map(notif => (
                      <div key={notif.id} className="card" style={{padding: '12px', margin: '8px 0'}}>
                        <h4>{notif.title}</h4>
                        <p className="muted" style={{fontSize: '13px'}}>{notif.message}</p>
                        <p className="muted" style={{fontSize: '12px'}}>{notif.time}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              {/* Vehicle & Battery Tab */}
              <div className={`tab-content ${dashboardTab === 'vehicle' ? 'active' : ''}`}>
                <h2>ÔøΩ Xe & Pin c·ªßa t√¥i</h2>
                
                {/* Vehicle Information */}
                <div className="card" style={{marginBottom: '24px'}}>
                  <h3>üõµ Th√¥ng tin xe</h3>
                  <div className="grid" style={{gridTemplateColumns: 'repeat(2, 1fr)', gap: '24px'}}>
                    <div>
                      <h4>Th√¥ng tin c∆° b·∫£n</h4>
                      <p><strong>M·∫´u xe:</strong> {vehicleData.model}</p>
                      <p><strong>Bi·ªÉn s·ªë:</strong> {vehicleData.licensePlate}</p>
                      <p><strong>NƒÉm s·∫£n xu·∫•t:</strong> {vehicleData.year}</p>
                      <p><strong>Dung l∆∞·ª£ng pin:</strong> {vehicleData.batteryCapacity}</p>
                    </div>
                    <div>
                      <h4>ƒêƒÉng k√Ω & B·∫£o h√†nh</h4>
                      <p><strong>Ng√†y ƒëƒÉng k√Ω:</strong> {vehicleData.registrationDate}</p>
                      <p><strong>Tr·∫°ng th√°i:</strong> <span className="chip">Ho·∫°t ƒë·ªông</span></p>
                      <p><strong>B·∫£o hi·ªÉm:</strong> C√≤n hi·ªáu l·ª±c</p>
                      <p><strong>Ki·ªÉm ƒë·ªãnh:</strong> 15/03/2025</p>
                    </div>
                  </div>
                </div>

                {/* Battery Information */}
                <div className="card">
                  <h3>üîã Th√¥ng tin pin hi·ªán t·∫°i</h3>
                  <div className="grid" style={{gridTemplateColumns: 'repeat(2, 1fr)', gap: '24px', marginBottom: '20px'}}>
                    <div className="card" style={{padding: '16px', textAlign: 'center'}}>
                      <h4>M·ª©c pin</h4>
                      <div className="price" style={{color: batteryData.current > 50 ? '#19c37d' : batteryData.current > 20 ? '#ffa500' : '#ff4757'}}>{batteryData.current}%</div>
                      <div className="charge-bar" style={{width: '100%', height: '8px', background: 'rgba(255,255,255,0.1)', borderRadius: '4px', overflow: 'hidden', marginTop: '8px'}}>
                        <div className="charge-fill" style={{
                          width: `${batteryData.current}%`, 
                          height: '100%', 
                          background: batteryData.current > 50 ? '#19c37d' : batteryData.current > 20 ? '#ffa500' : '#ff4757',
                          transition: 'width 0.3s ease'
                        }}></div>
                      </div>
                    </div>
                    <div className="card" style={{padding: '16px', textAlign: 'center'}}>
                      <h4>S·ª©c kh·ªèe pin</h4>
                      <div className="price" style={{color: '#19c37d'}}>{batteryData.health}%</div>
                      <p className="muted" style={{fontSize: '14px', marginTop: '8px'}}>T√¨nh tr·∫°ng: T·ªët</p>
                    </div>
                  </div>
                  
                  <div className="grid" style={{gridTemplateColumns: 'repeat(4, 1fr)', gap: '16px', marginBottom: '20px'}}>
                    <div style={{textAlign: 'center'}}>
                      <h5>Nhi·ªát ƒë·ªô</h5>
                      <div className="stat-value" style={{fontSize: '24px', color: '#19c37d'}}>{batteryData.temperature}¬∞C</div>
                    </div>
                    <div style={{textAlign: 'center'}}>
                      <h5>ƒêi·ªán √°p</h5>
                      <div className="stat-value" style={{fontSize: '24px', color: '#19c37d'}}>{batteryData.voltage}V</div>
                    </div>
                    <div style={{textAlign: 'center'}}>
                      <h5>Chu k·ª≥ s·∫°c</h5>
                      <div className="stat-value" style={{fontSize: '24px', color: '#6ab7ff'}}>{batteryData.cycles}</div>
                    </div>
                    <div style={{textAlign: 'center'}}>
                      <h5>Qu√£ng ƒë∆∞·ªùng</h5>
                      <div className="stat-value" style={{fontSize: '24px', color: '#6ab7ff'}}>12,450km</div>
                    </div>
                  </div>

                  <div className="card" style={{backgroundColor: 'rgba(255,255,255,0.02)', marginTop: '16px'}}>
                    <h4>üìä L·ªãch s·ª≠ s·ª≠ d·ª•ng</h4>
                    <div className="grid" style={{gridTemplateColumns: 'repeat(2, 1fr)', gap: '16px'}}>
                      <div>
                        <p><strong>Th·ªùi gian s·ª≠ d·ª•ng:</strong> 8 th√°ng 15 ng√†y</p>
                        <p><strong>L·∫ßn ƒë·ªïi pin cu·ªëi:</strong> 2 ng√†y tr∆∞·ªõc</p>
                        <p><strong>T·ªïng l·∫ßn ƒë·ªïi pin:</strong> 47 l·∫ßn</p>
                      </div>
                      <div>
                        <p><strong>Qu√£ng ƒë∆∞·ªùng trung b√¨nh:</strong> 45km/ng√†y</p>
                        <p><strong>Hi·ªáu su·∫•t pin:</strong> 95%</p>
                        <p><strong>Ti·∫øt ki·ªám CO‚ÇÇ:</strong> 1,245kg</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* Subscription Tab */}
              <div className={`tab-content ${dashboardTab === 'subscription' ? 'active' : ''}`}>
                <h2>üìã G√≥i d·ªãch v·ª• c·ªßa t√¥i</h2>
                <div className="card featured">
                  <h3>G√≥i {subscriptionData.plan} <span className="chip">{subscriptionData.status}</span></h3>
                  <div className="grid" style={{gridTemplateColumns: 'repeat(3, 1fr)', gap: '24px'}}>
                    <div>
                      <h4>L·∫ßn ƒë·ªïi c√≤n l·∫°i</h4>
                      <div className="price">{subscriptionData.swapsLeft}/{subscriptionData.totalSwaps}</div>
                    </div>
                    <div>
                      <h4>Ng√†y h·∫øt h·∫°n</h4>
                      <div className="price">{subscriptionData.expiryDate}</div>
                    </div>
                    <div>
                      <h4>Ph√≠ h√†ng th√°ng</h4>
                      <div className="price">{subscriptionData.monthlyFee.toLocaleString()}‚Ç´</div>
                    </div>
                  </div>
                  <div style={{marginTop: '20px'}}>
                    <button className="btn btn-primary" onClick={() => showToast('Gia h·∫°n g√≥i th√†nh c√¥ng!')}>Gia h·∫°n g√≥i</button>
                    <button className="btn" style={{marginLeft: '12px'}} onClick={() => showToast('ƒê√£ chuy·ªÉn sang g√≥i Plus!')}>Thay ƒë·ªïi g√≥i</button>
                  </div>
                </div>

                {/* Available Plans */}
                <div className="card" style={{marginTop: '24px'}}>
                  <h3>C√°c g√≥i d·ªãch v·ª• kh√°c</h3>
                  <div className="pricing">
                    <div className="card">
                      <h3>Basic</h3>
                      <div className="price">99,000‚Ç´<span className="muted">/th√°ng</span></div>
                      <ul className="clean">
                        <li><span className="tick">‚úì</span> 10 l·∫ßn ƒë·ªïi pin/th√°ng</li>
                        <li><span className="tick">‚úì</span> ·ª®ng d·ª•ng c∆° b·∫£n</li>
                        <li><span className="tick">‚úì</span> H·ªó tr·ª£ 24/7</li>
                        <li><span className="tick">‚úì</span> Theo d√µi pin c∆° b·∫£n</li>
                      </ul>
                      <button className="btn btn-primary" onClick={() => showToast('ƒê√£ chuy·ªÉn sang g√≥i Basic!')}>Ch·ªçn g√≥i</button>
                    </div>
                    <div className="card">
                      <h3>Plus <span className="chip">Ph·ªï bi·∫øn</span></h3>
                      <div className="price">199,000‚Ç´<span className="muted">/th√°ng</span></div>
                      <ul className="clean">
                        <li><span className="tick">‚úì</span> 30 l·∫ßn ƒë·ªïi pin/th√°ng</li>
                        <li><span className="tick">‚úì</span> ·ª®ng d·ª•ng ƒë·∫ßy ƒë·ªß</li>
                        <li><span className="tick">‚úì</span> ∆Øu ti√™n ƒë·ªïi pin</li>
                        <li><span className="tick">‚úì</span> H·ªó tr·ª£ ∆∞u ti√™n</li>
                        <li><span className="tick">‚úì</span> Th√¥ng b√°o real-time</li>
                        <li><span className="tick">‚úì</span> ƒê·∫∑t tr∆∞·ªõc tr·∫°m</li>
                      </ul>
                      <button className="btn btn-primary" onClick={() => showToast('ƒê√£ chuy·ªÉn sang g√≥i Plus!')}>Ch·ªçn g√≥i</button>
                    </div>
                    <div className="card featured">
                      <h3>Premium <span className="chip">Hi·ªán t·∫°i</span></h3>
                      <div className="price">299,000‚Ç´<span className="muted">/th√°ng</span></div>
                      <ul className="clean">
                        <li><span className="tick">‚úì</span> Kh√¥ng gi·ªõi h·∫°n ƒë·ªïi pin</li>
                        <li><span className="tick">‚úì</span> T√≠nh nƒÉng cao c·∫•p</li>
                        <li><span className="tick">‚úì</span> ƒê·∫∑t tr∆∞·ªõc tr·∫°m ƒë·ªïi</li>
                        <li><span className="tick">‚úì</span> H·ªó tr·ª£ VIP 24/7</li>
                        <li><span className="tick">‚úì</span> Ph√¢n t√≠ch chi ti·∫øt</li>
                        <li><span className="tick">‚úì</span> Xe thay th·∫ø kh·∫©n c·∫•p</li>
                        <li><span className="tick">‚úì</span> B·∫£o hi·ªÉm pin</li>
                      </ul>
                      <button className="btn btn-success" disabled>ƒêang s·ª≠ d·ª•ng</button>
                    </div>
                  </div>
                </div>
              </div>

              {/* Swap Tab */}
              <div className={`tab-content ${dashboardTab === 'swap' ? 'active' : ''}`}>
                <h2>‚ö° ƒê·ªïi pin</h2>
                
                {swapStep === 1 && (
                  <div className="card">
                    <h3>B∆∞·ªõc 1: Ch·ªçn tr·∫°m ƒë·ªïi pin</h3>
                    <div className="grid" style={{gridTemplateColumns: 'repeat(3, 1fr)', gap: '16px'}}>
                      {nearbyStations.filter(s => s.status === 'Ho·∫°t ƒë·ªông').map(station => {
                        const distance = calculateDistance(userLocation.lat, userLocation.lng, station.lat, station.lng);
                        return (
                          <div key={station.id} className="card" style={{cursor: 'pointer', border: selectedStation === station.id ? '2px solid #19c37d' : '1px solid rgba(255,255,255,0.1)'}} 
                               onClick={() => {
                                 setSelectedStation(station.id);
                                 showToast('ƒê√£ ch·ªçn ' + station.name);
                               }}>
                            <h4>{station.name}</h4>
                            <p className="muted">üìç {distance} t·ª´ v·ªã tr√≠ c·ªßa b·∫°n</p>
                            <p className="muted">üîã {station.available}/{station.total} pin c√≥ s·∫µn</p>
                            <p className="muted">üèóÔ∏è {station.poles.length} tr·ª• s·∫°c</p>
                            <p className="muted">‚è±Ô∏è Th·ªùi gian ch·ªù: ~{station.waitTime} ph√∫t</p>
                            <div style={{marginTop: '12px'}}>
                              <span style={{color: '#19c37d'}}>‚óè {station.fullBatteries} pin ƒë·∫ßy</span><br/>
                              <span style={{color: '#ffa500'}}>‚óè {station.chargingBatteries} pin ƒëang s·∫°c</span><br/>
                              <span style={{color: '#ff4757'}}>‚óè {station.emptyBatteries} pin tr·ªëng</span>
                            </div>
                          </div>
                        );
                      })}
                    </div>
                    {selectedStation && (
                      <div style={{marginTop: '20px', textAlign: 'center'}}>
                        <button className="btn btn-primary" onClick={() => setSwapStep(2)}>
                          Ti·∫øp t·ª•c v·ªõi tr·∫°m ƒë√£ ch·ªçn
                        </button>
                      </div>
                    )}
                  </div>
                )}

                {swapStep === 2 && (
                  <div className="card">
                    <h3>B∆∞·ªõc 2: Ch·ªçn tr·ª• s·∫°c</h3>
                    <p className="muted">Ch·ªçn m·ªôt tr·ª• c√≥ pin ƒë·∫ßy ƒë·ªÉ th·ª±c hi·ªán ƒë·ªïi pin</p>
                    
                    <div className="grid" style={{gridTemplateColumns: 'repeat(5, 1fr)', gap: '12px', marginBottom: '20px'}}>
                      {Array.from({length: 10}, (_, i) => {
                        const batteryStatus = i < 4 ? 'full' : i < 7 ? 'charging' : 'empty';
                        const batteryLevel = batteryStatus === 'full' ? 100 : batteryStatus === 'charging' ? Math.floor(Math.random() * 80) + 20 : 0;
                        const canSelect = batteryStatus === 'full';
                        
                        return (
                          <div key={i} 
                               className="card" 
                               style={{
                                 cursor: canSelect ? 'pointer' : 'not-allowed',
                                 opacity: canSelect ? 1 : 0.6,
                                 border: selectedPickupSlot === i ? '3px solid #19c37d' : '1px solid rgba(255,255,255,0.1)',
                                 textAlign: 'center',
                                 padding: '12px',
                                 backgroundColor: canSelect ? 'rgba(25, 195, 125, 0.15)' : 'rgba(255,255,255,0.05)'
                               }}
                               onClick={() => {
                                 if (canSelect) {
                                   setSelectedPickupSlot(i);
                                   showToast(`Ch·ªçn l·∫•y pin t·ª´ Slot ${i + 1} - ${batteryLevel}%`);
                                 }
                               }}>
                            <div style={{fontSize: '20px', margin: '8px 0'}}>
                              {batteryStatus === 'full' && 'üîã'}
                              {batteryStatus === 'charging' && '‚ö°'}
                              {batteryStatus === 'empty' && 'ü™´'}
                            </div>
                            <p><strong>Slot {i + 1}</strong></p>
                            <p style={{fontSize: '14px', color: batteryStatus === 'full' ? '#19c37d' : batteryStatus === 'charging' ? '#ffa500' : '#ff4757'}}>
                              {batteryLevel}%
                            </p>
                            <p className="muted" style={{fontSize: '11px'}}>
                              {batteryStatus === 'full' && 'ƒê·∫ßy - C√≥ th·ªÉ l·∫•y'}
                              {batteryStatus === 'charging' && 'ƒêang s·∫°c'}
                              {batteryStatus === 'empty' && 'Tr·ªëng'}
                            </p>
                          </div>
                        );
                      })}
                    </div>

                    {selectedPickupSlot !== null && (
                      <div className="card" style={{backgroundColor: 'rgba(25, 195, 125, 0.1)', marginBottom: '20px'}}>
                        <h4>‚úÖ ƒê√£ ch·ªçn pin ƒë·ªÉ l·∫•y</h4>
                        <p>ÔøΩ <strong>Slot {selectedPickupSlot + 1}</strong> - Pin ƒë·∫ßy 100%</p>
                        <p className="muted">Pin n√†y s·∫Ω ƒë∆∞·ª£c l·∫Øp v√†o xe c·ªßa b·∫°n</p>
                      </div>
                    )}

                    <div style={{marginTop: '20px'}}>
                      {selectedPickupSlot !== null ? (
                        <button className="btn btn-primary" onClick={() => setSwapStep(3)}>
                          Ti·∫øp t·ª•c ch·ªçn slot ƒë·ªÉ tr·∫£ pin c≈©
                        </button>
                      ) : (
                        <button className="btn" disabled>
                          Vui l√≤ng ch·ªçn slot pin ƒë·∫ßy
                        </button>
                      )}
                      <button className="btn" style={{marginLeft: '12px'}} onClick={() => {
                        setSwapStep(1);
                        setSelectedStation(null);
                        setSelectedPickupSlot(null);
                      }}>
                        Quay l·∫°i
                      </button>
                    </div>
                  </div>
                )}

                {swapStep === 3 && (
                  <div className="card">
                    <h3>B∆∞·ªõc 3: Ch·ªçn slot tr·ªëng ƒë·ªÉ tr·∫£ pin c≈©</h3>
                    <p className="muted">Ch·ªçn m·ªôt slot tr·ªëng ƒë·ªÉ ƒë·∫∑t pin c≈© ({batteryData.current}%) v√†o s·∫°c</p>
                    
                    <div className="grid" style={{gridTemplateColumns: 'repeat(5, 1fr)', gap: '12px', marginBottom: '20px'}}>
                      {Array.from({length: 10}, (_, i) => {
                        const batteryStatus = i < 4 ? 'full' : i < 7 ? 'charging' : 'empty';
                        const batteryLevel = batteryStatus === 'full' ? 100 : batteryStatus === 'charging' ? Math.floor(Math.random() * 80) + 20 : 0;
                        const canSelect = batteryStatus === 'empty';
                        const isPickupSlot = selectedPickupSlot === i;
                        
                        return (
                          <div key={i} 
                               className="card" 
                               style={{
                                 cursor: canSelect ? 'pointer' : 'not-allowed',
                                 opacity: isPickupSlot ? 0.3 : canSelect ? 1 : 0.6,
                                 border: selectedReturnSlot === i ? '3px solid #ff4757' : 
                                        isPickupSlot ? '2px solid #19c37d' :
                                        '1px solid rgba(255,255,255,0.1)',
                                 textAlign: 'center',
                                 padding: '12px',
                                 backgroundColor: isPickupSlot ? 'rgba(25, 195, 125, 0.2)' :
                                                canSelect ? 'rgba(255, 71, 87, 0.15)' : 'rgba(255,255,255,0.05)'
                               }}
                               onClick={() => {
                                 if (canSelect && !isPickupSlot) {
                                   setSelectedReturnSlot(i);
                                   showToast(`Ch·ªçn tr·∫£ pin c≈© v√†o Slot ${i + 1}`);
                                 }
                               }}>
                            <div style={{fontSize: '20px', margin: '8px 0'}}>
                              {isPickupSlot ? '‚úÖ' : 
                               batteryStatus === 'full' ? 'üîã' :
                               batteryStatus === 'charging' ? '‚ö°' : 'ü™´'}
                            </div>
                            <p><strong>Slot {i + 1}</strong></p>
                            <p style={{fontSize: '14px', color: isPickupSlot ? '#19c37d' :
                                                                    batteryStatus === 'full' ? '#19c37d' : 
                                                                    batteryStatus === 'charging' ? '#ffa500' : '#ff4757'}}>
                              {isPickupSlot ? 'ƒê√£ ch·ªçn l·∫•y' : `${batteryLevel}%`}
                            </p>
                            <p className="muted" style={{fontSize: '11px'}}>
                              {isPickupSlot && 'Pin ƒë√£ ch·ªçn l·∫•y'}
                              {!isPickupSlot && batteryStatus === 'full' && 'ƒê·∫ßy - Kh√¥ng th·ªÉ tr·∫£'}
                              {!isPickupSlot && batteryStatus === 'charging' && 'ƒêang s·∫°c'}
                              {!isPickupSlot && batteryStatus === 'empty' && 'Tr·ªëng - C√≥ th·ªÉ tr·∫£'}
                            </p>
                          </div>
                        );
                      })}
                    </div>

                    {selectedReturnSlot !== null && (
                      <div className="card" style={{backgroundColor: 'rgba(255, 71, 87, 0.1)', marginBottom: '20px'}}>
                        <h4>‚úÖ ƒê√£ ch·ªçn v·ªã tr√≠ tr·∫£ pin c≈©</h4>
                        <p>üì¶ <strong>Slot {selectedReturnSlot + 1}</strong> - Slot tr·ªëng</p>
                        <p className="muted">Pin c≈© ({batteryData.current}%) s·∫Ω ƒë∆∞·ª£c ƒë·∫∑t v√†o ƒë√¢y ƒë·ªÉ s·∫°c</p>
                      </div>
                    )}

                    <div className="card" style={{backgroundColor: 'rgba(255,255,255,0.05)', marginBottom: '20px'}}>
                      <h4>üîÑ T√≥m t·∫Øt giao d·ªãch ƒë·ªïi pin</h4>
                      <div className="grid" style={{gridTemplateColumns: 'repeat(3, 1fr)', gap: '16px', textAlign: 'center'}}>
                        <div>
                          <div style={{fontSize: '24px', marginBottom: '8px'}}>üì§</div>
                          <p><strong>L·∫•y pin m·ªõi</strong></p>
                          <p className="muted">Slot {selectedPickupSlot + 1} - 100%</p>
                        </div>
                        <div>
                          <div style={{fontSize: '24px', marginBottom: '8px'}}>üîÑ</div>
                          <p><strong>ƒê·ªïi pin</strong></p>
                          <p className="muted">T·ª± ƒë·ªông x·ª≠ l√Ω</p>
                        </div>
                        <div>
                          <div style={{fontSize: '24px', marginBottom: '8px'}}>üì•</div>
                          <p><strong>Tr·∫£ pin c≈©</strong></p>
                          <p className="muted">Slot {selectedReturnSlot !== null ? selectedReturnSlot + 1 : '?'} - {batteryData.current}%</p>
                        </div>
                      </div>
                    </div>

                    <div style={{marginTop: '20px'}}>
                      {selectedReturnSlot !== null ? (
                        <button className="btn btn-primary" onClick={() => setSwapStep(4)}>
                          X√°c nh·∫≠n ƒë·ªïi pin
                        </button>
                      ) : (
                        <button className="btn" disabled>
                          Vui l√≤ng ch·ªçn slot tr·ªëng ƒë·ªÉ tr·∫£ pin c≈©
                        </button>
                      )}
                      <button className="btn" style={{marginLeft: '12px'}} onClick={() => setSwapStep(2)}>
                        Quay l·∫°i
                      </button>
                    </div>
                  </div>
                )}

                {swapStep === 4 && (
                  <div className="card">
                    <h3>B∆∞·ªõc 4: X√°c nh·∫≠n t·∫°i tr·∫°m</h3>
                    <div style={{textAlign: 'center', padding: '40px'}}>
                      <div style={{width: '200px', height: '200px', border: '2px dashed rgba(255,255,255,0.3)', borderRadius: '12px', margin: '0 auto 20px', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '48px'}}>
                        üì±
                      </div>
                      <h4>Qu√©t m√£ QR t·∫°i tr·∫°m ƒë·ªïi pin</h4>
                      <p className="muted">ƒê∆∞a ƒëi·ªán tho·∫°i l·∫°i g·∫ßn m√†n h√¨nh tr·∫°m ƒë·ªÉ x√°c nh·∫≠n giao d·ªãch</p>
                      
                      <div className="card" style={{backgroundColor: 'rgba(255,255,255,0.05)', margin: '20px auto', maxWidth: '400px'}}>
                        <h5>üîÑ Chi ti·∫øt giao d·ªãch</h5>
                        <div style={{textAlign: 'left', fontSize: '14px'}}>
                          <p>üè™ <strong>Tr·∫°m:</strong> {nearbyStations.find(s => s.id === selectedStation)?.name}</p>
                          <p>üì§ <strong>L·∫•y pin:</strong> Slot {selectedPickupSlot + 1} (100%)</p>
                          <p>ÔøΩ <strong>Tr·∫£ pin:</strong> Slot {selectedReturnSlot + 1} ({batteryData.current}%)</p>
                          <p>üí∞ <strong>Chi ph√≠:</strong> 15,000‚Ç´</p>
                          <p>‚è±Ô∏è <strong>Th·ªùi gian:</strong> ~3 ph√∫t</p>
                        </div>
                      </div>

                      <button className="btn btn-primary" onClick={() => {
                        setBatteryData(prev => ({...prev, current: 100}));
                        setSwapStep(1);
                        setSelectedStation(null);
                        setSelectedPickupSlot(null);
                        setSelectedReturnSlot(null);
                        showToast('üéâ ƒê·ªïi pin th√†nh c√¥ng! Pin m·ªõi: 100%. Pin c≈© ƒë√£ v√†o slot s·∫°c.', 'success');
                      }}>
                        M√¥ ph·ªèng ƒë·ªïi pin th√†nh c√¥ng
                      </button>
                    </div>
                  </div>
                )}
              </div>

              {/* Payment Tab - Enhanced */}
              <div className={`tab-content ${dashboardTab === 'payment' ? 'active' : ''}`}>
                <h2>üí≥ Thanh to√°n</h2>
                
                <div className="card">
                  <div className="nav-tabs" style={{borderBottom: '1px solid rgba(255,255,255,0.1)', marginBottom: '20px'}}>
                    <button 
                      className={`nav-tab ${paymentTab === 'top-up' ? 'active' : ''}`}
                      onClick={() => setPaymentTab('top-up')}
                    >
                      üí∞ N·∫°p ti·ªÅn
                    </button>
                    <button 
                      className={`nav-tab ${paymentTab === 'history' ? 'active' : ''}`}
                      onClick={() => setPaymentTab('history')}
                    >
                      üìä L·ªãch s·ª≠
                    </button>
                    <button 
                      className={`nav-tab ${paymentTab === 'methods' ? 'active' : ''}`}
                      onClick={() => setPaymentTab('methods')}
                    >
                      üí≥ Ph∆∞∆°ng th·ª©c
                    </button>
                    <button 
                      className={`nav-tab ${paymentTab === 'autopay' ? 'active' : ''}`}
                      onClick={() => setPaymentTab('autopay')}
                    >
                      üîÑ T·ª± ƒë·ªông
                    </button>
                  </div>

                  {paymentTab === 'top-up' && (
                    <div>
                      <div className="card" style={{marginBottom: '20px', padding: '16px', textAlign: 'center'}}>
                        <h4>üí∞ S·ªë d∆∞ hi·ªán t·∫°i</h4>
                        <div className="price" style={{fontSize: '32px', color: '#19c37d'}}>485,000‚Ç´</div>
                      </div>
                      
                      <h4>N·∫°p nhanh</h4>
                      <div className="grid" style={{gridTemplateColumns: 'repeat(4, 1fr)', gap: '16px', marginBottom: '20px'}}>
                        <div className="card" style={{cursor: 'pointer', textAlign: 'center'}} onClick={() => showToast('N·∫°p 50,000‚Ç´ th√†nh c√¥ng!')}>
                          <div className="price">50,000‚Ç´</div>
                        </div>
                        <div className="card" style={{cursor: 'pointer', textAlign: 'center'}} onClick={() => showToast('N·∫°p 100,000‚Ç´ th√†nh c√¥ng!')}>
                          <div className="price">100,000‚Ç´</div>
                        </div>
                        <div className="card" style={{cursor: 'pointer', textAlign: 'center'}} onClick={() => showToast('N·∫°p 200,000‚Ç´ th√†nh c√¥ng!')}>
                          <div className="price">200,000‚Ç´</div>
                        </div>
                        <div className="card" style={{cursor: 'pointer', textAlign: 'center'}} onClick={() => showToast('N·∫°p 500,000‚Ç´ th√†nh c√¥ng!')}>
                          <div className="price">500,000‚Ç´</div>
                        </div>
                      </div>
                      
                      <div className="form-group">
                        <label>S·ªë ti·ªÅn kh√°c</label>
                        <input type="number" placeholder="Nh·∫≠p s·ªë ti·ªÅn" min="10000" max="5000000" />
                      </div>
                      
                      <div className="form-group">
                        <label>Ph∆∞∆°ng th·ª©c thanh to√°n</label>
                        <div className="grid" style={{gridTemplateColumns: 'repeat(2, 1fr)', gap: '12px'}}>
                          <div className="card" style={{cursor: 'pointer', padding: '12px', display: 'flex', alignItems: 'center', gap: '8px'}}>
                            <span style={{fontSize: '20px'}}>üì±</span>
                            <span>V√≠ MoMo</span>
                          </div>
                          <div className="card" style={{cursor: 'pointer', padding: '12px', display: 'flex', alignItems: 'center', gap: '8px'}}>
                            <span style={{fontSize: '20px'}}>üíô</span>
                            <span>ZaloPay</span>
                          </div>
                          <div className="card" style={{cursor: 'pointer', padding: '12px', display: 'flex', alignItems: 'center', gap: '8px'}}>
                            <span style={{fontSize: '20px'}}>üè¶</span>
                            <span>VietQR</span>
                          </div>
                          <div className="card" style={{cursor: 'pointer', padding: '12px', display: 'flex', alignItems: 'center', gap: '8px'}}>
                            <span style={{fontSize: '20px'}}>üí≥</span>
                            <span>Th·∫ª ng√¢n h√†ng</span>
                          </div>
                        </div>
                      </div>
                      
                      <button className="btn btn-primary">N·∫°p ti·ªÅn</button>
                    </div>
                  )}

                  {paymentTab === 'history' && (
                    <div>
                      <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px'}}>
                        <h4>L·ªãch s·ª≠ giao d·ªãch</h4>
                        <select style={{padding: '8px', borderRadius: '8px', background: 'rgba(255,255,255,0.1)', border: '1px solid rgba(255,255,255,0.2)', color: 'white'}}>
                          <option>Th√°ng n√†y</option>
                          <option>3 th√°ng qua</option>
                          <option>6 th√°ng qua</option>
                          <option>1 nƒÉm qua</option>
                        </select>
                      </div>
                      {paymentHistory.map(payment => (
                        <div key={payment.id} className="card" style={{marginBottom: '12px', padding: '16px'}}>
                          <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>
                            <div style={{display: 'flex', alignItems: 'center', gap: '12px'}}>
                              <div style={{fontSize: '24px'}}>
                                {payment.type === 'N·∫°p ti·ªÅn' ? 'üí∞' : payment.type === 'ƒê·ªïi pin' ? '‚ö°' : 'üìã'}
                              </div>
                              <div>
                                <h4 style={{margin: '0'}}>{payment.type}</h4>
                                <p className="muted" style={{margin: '0', fontSize: '13px'}}>{payment.date}</p>
                              </div>
                            </div>
                            <div style={{textAlign: 'right'}}>
                              <div className={`price ${payment.amount > 0 ? 'success' : ''}`} style={{margin: '0', fontSize: '16px'}}>
                                {payment.amount > 0 ? '+' : ''}{payment.amount.toLocaleString()}‚Ç´
                              </div>
                              <span className="chip">{payment.status}</span>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}

                  {paymentTab === 'methods' && (
                    <div>
                      <h4>Ph∆∞∆°ng th·ª©c thanh to√°n ƒë√£ l∆∞u</h4>
                      <div className="card" style={{marginBottom: '12px', padding: '16px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>
                        <div style={{display: 'flex', alignItems: 'center', gap: '12px'}}>
                          <span style={{fontSize: '24px'}}>üì±</span>
                          <div>
                            <h4 style={{margin: '0'}}>V√≠ MoMo</h4>
                            <p className="muted" style={{margin: '0', fontSize: '13px'}}>**** **** **** 1234</p>
                          </div>
                          <span className="chip">M·∫∑c ƒë·ªãnh</span>
                        </div>
                        <button className="btn">Ch·ªânh s·ª≠a</button>
                      </div>
                      
                      <div className="card" style={{marginBottom: '12px', padding: '16px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>
                        <div style={{display: 'flex', alignItems: 'center', gap: '12px'}}>
                          <span style={{fontSize: '24px'}}>üè¶</span>
                          <div>
                            <h4 style={{margin: '0'}}>Vietcombank</h4>
                            <p className="muted" style={{margin: '0', fontSize: '13px'}}>**** **** **** 5678</p>
                          </div>
                        </div>
                        <button className="btn">Ch·ªânh s·ª≠a</button>
                      </div>
                      
                      <button className="btn btn-primary">+ Th√™m ph∆∞∆°ng th·ª©c m·ªõi</button>
                    </div>
                  )}

                  {paymentTab === 'autopay' && (
                    <div>
                      <h4>Thanh to√°n t·ª± ƒë·ªông</h4>
                      <div className="card" style={{padding: '16px'}}>
                        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px'}}>
                          <div>
                            <h4 style={{margin: '0'}}>T·ª± ƒë·ªông n·∫°p ti·ªÅn</h4>
                            <p className="muted" style={{margin: '0', fontSize: '13px'}}>N·∫°p ti·ªÅn khi s·ªë d∆∞ d∆∞·ªõi 50,000‚Ç´</p>
                          </div>
                          <label style={{position: 'relative', display: 'inline-block', width: '50px', height: '24px'}}>
                            <input type="checkbox" style={{opacity: 0, width: 0, height: 0}} />
                            <span style={{position: 'absolute', cursor: 'pointer', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: '#ccc', borderRadius: '24px', transition: '0.4s'}}></span>
                          </label>
                        </div>
                        
                        <div className="form-group">
                          <label>S·ªë ti·ªÅn n·∫°p t·ª± ƒë·ªông</label>
                          <select>
                            <option>100,000‚Ç´</option>
                            <option>200,000‚Ç´</option>
                            <option>500,000‚Ç´</option>
                          </select>
                        </div>
                        
                        <div className="form-group">
                          <label>Ph∆∞∆°ng th·ª©c thanh to√°n</label>
                          <select>
                            <option>V√≠ MoMo (**** 1234)</option>
                            <option>Vietcombank (**** 5678)</option>
                          </select>
                        </div>
                      </div>
                      
                      <div className="card" style={{padding: '16px', marginTop: '16px'}}>
                        <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>
                          <div>
                            <h4 style={{margin: '0'}}>Thanh to√°n g√≥i d·ªãch v·ª• t·ª± ƒë·ªông</h4>
                            <p className="muted" style={{margin: '0', fontSize: '13px'}}>Gia h·∫°n t·ª± ƒë·ªông g√≥i Premium h√†ng th√°ng</p>
                          </div>
                          <label style={{position: 'relative', display: 'inline-block', width: '50px', height: '24px'}}>
                            <input type="checkbox" defaultChecked style={{opacity: 0, width: 0, height: 0}} />
                            <span style={{position: 'absolute', cursor: 'pointer', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: '#19c37d', borderRadius: '24px', transition: '0.4s'}}></span>
                          </label>
                        </div>
                      </div>
                    </div>
                  )}
                </div>
              </div>

              {/* Support Tab */}
              <div className={`tab-content ${dashboardTab === 'support' ? 'active' : ''}`}>
                <h2>üí¨ H·ªó tr·ª£ kh√°ch h√†ng</h2>
                <div className="grid" style={{gridTemplateColumns: 'repeat(3, 1fr)', gap: '20px'}}>
                  <div className="card" style={{textAlign: 'center', cursor: 'pointer'}} onClick={() => showToast('ƒêang k·∫øt n·ªëi v·ªõi t·ªïng ƒë√†i...')}>
                    <div className="icon">üìû</div>
                    <h3>Hotline</h3>
                    <p className="muted">1900 1234</p>
                    <p className="muted">24/7</p>
                  </div>
                  
                  <div className="card" style={{textAlign: 'center', cursor: 'pointer'}} onClick={() => showToast('ƒêang m·ªü chat...')}>
                    <div className="icon">üí¨</div>
                    <h3>Live Chat</h3>
                    <p className="muted">Tr√≤ chuy·ªán tr·ª±c ti·∫øp</p>
                    <p className="muted">Online</p>
                  </div>
                  
                  <div className="card" style={{textAlign: 'center', cursor: 'pointer'}} onClick={() => showToast('ƒêang m·ªü email...')}>
                    <div className="icon">üìß</div>
                    <h3>Email</h3>
                    <p className="muted">support@swp201.com</p>
                    <p className="muted">Ph·∫£n h·ªìi trong 24h</p>
                  </div>
                </div>
                
                <div className="card" style={{marginTop: '24px'}}>
                  <h3>FAQ - C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h3>
                  <div className="card" style={{marginBottom: '12px'}}>
                    <h4>L√†m th·∫ø n√†o ƒë·ªÉ ƒë·ªïi pin?</h4>
                    <p className="muted">Ch·ªçn tr·∫°m ‚Üí Qu√©t QR ‚Üí ƒê·ª£i m√°y ƒë·ªïi pin t·ª± ƒë·ªông ‚Üí Ho√†n t·∫•t</p>
                  </div>
                  <div className="card" style={{marginBottom: '12px'}}>
                    <h4>Chi ph√≠ ƒë·ªïi pin l√† bao nhi√™u?</h4>
                    <p className="muted">T·ª´ 10,000‚Ç´ - 20,000‚Ç´ t√πy theo g√≥i d·ªãch v·ª• v√† lo·∫°i pin</p>
                  </div>
                  <div className="card">
                    <h4>Pin ƒë·ªïi c√≥ ch·∫•t l∆∞·ª£ng t·ªët kh√¥ng?</h4>
                    <p className="muted">T·∫•t c·∫£ pin ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm tra k·ªπ l∆∞·ª°ng, ƒë·∫£m b·∫£o &gt;90% dung l∆∞·ª£ng</p>
                  </div>
                </div>
              </div>

              {/* Settings Tab */}
              <div className={`tab-content ${dashboardTab === 'settings' ? 'active' : ''}`}>
                <h2>‚öôÔ∏è C√†i ƒë·∫∑t</h2>
                
                {/* Profile Settings */}
                <div className="card" style={{marginBottom: '24px'}}>
                  <h3>üë§ Th√¥ng tin c√° nh√¢n</h3>
                  <div className="grid" style={{gridTemplateColumns: 'repeat(2, 1fr)', gap: '16px'}}>
                    <div className="form-group">
                      <label>H·ªç v√† t√™n</label>
                      <input type="text" defaultValue={currentUser.name} />
                    </div>
                    <div className="form-group">
                      <label>Email</label>
                      <input type="email" defaultValue={currentUser.email} />
                    </div>
                    <div className="form-group">
                      <label>S·ªë ƒëi·ªán tho·∫°i</label>
                      <input type="tel" defaultValue="0901234567" />
                    </div>
                    <div className="form-group">
                      <label>ƒê·ªãa ch·ªâ</label>
                      <input type="text" defaultValue="123 Nguy·ªÖn VƒÉn Linh, Q7, TP.HCM" />
                    </div>
                  </div>
                  <button className="btn btn-primary" onClick={() => showToast('C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!')}>
                    C·∫≠p nh·∫≠t th√¥ng tin
                  </button>
                </div>

                {/* Notification Settings */}
                <div className="card" style={{marginBottom: '24px'}}>
                  <h3>üîî C√†i ƒë·∫∑t th√¥ng b√°o</h3>
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0', borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
                    <div>
                      <h4 style={{margin: '0'}}>Th√¥ng b√°o push</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>Nh·∫≠n th√¥ng b√°o tr√™n thi·∫øt b·ªã</p>
                    </div>
                    <label style={{position: 'relative', display: 'inline-block', width: '50px', height: '24px'}}>
                      <input type="checkbox" defaultChecked style={{opacity: 0, width: 0, height: 0}} />
                      <span style={{position: 'absolute', cursor: 'pointer', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: '#19c37d', borderRadius: '24px', transition: '0.4s'}}></span>
                    </label>
                  </div>
                  
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0', borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
                    <div>
                      <h4 style={{margin: '0'}}>Email th√¥ng b√°o</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>Nh·∫≠n th√¥ng b√°o qua email</p>
                    </div>
                    <label style={{position: 'relative', display: 'inline-block', width: '50px', height: '24px'}}>
                      <input type="checkbox" defaultChecked style={{opacity: 0, width: 0, height: 0}} />
                      <span style={{position: 'absolute', cursor: 'pointer', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: '#19c37d', borderRadius: '24px', transition: '0.4s'}}></span>
                    </label>
                  </div>
                  
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0'}}>
                    <div>
                      <h4 style={{margin: '0'}}>SMS th√¥ng b√°o</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>Nh·∫≠n th√¥ng b√°o qua SMS</p>
                    </div>
                    <label style={{position: 'relative', display: 'inline-block', width: '50px', height: '24px'}}>
                      <input type="checkbox" style={{opacity: 0, width: 0, height: 0}} />
                      <span style={{position: 'absolute', cursor: 'pointer', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: '#ccc', borderRadius: '24px', transition: '0.4s'}}></span>
                    </label>
                  </div>
                </div>

                {/* Security Settings */}
                <div className="card" style={{marginBottom: '24px'}}>
                  <h3>üîí B·∫£o m·∫≠t</h3>
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0', borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
                    <div>
                      <h4 style={{margin: '0'}}>X√°c th·ª±c 2 y·∫øu t·ªë</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>B·∫£o v·ªá t√†i kho·∫£n v·ªõi m√£ OTP</p>
                    </div>
                    <button className="btn">K√≠ch ho·∫°t</button>
                  </div>
                  
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0', borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
                    <div>
                      <h4 style={{margin: '0'}}>ƒê·ªïi m·∫≠t kh·∫©u</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>C·∫≠p nh·∫≠t m·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p</p>
                    </div>
                    <button className="btn">ƒê·ªïi m·∫≠t kh·∫©u</button>
                  </div>
                  
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0'}}>
                    <div>
                      <h4 style={{margin: '0'}}>Phi√™n ƒëƒÉng nh·∫≠p</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>Qu·∫£n l√Ω c√°c thi·∫øt b·ªã ƒë√£ ƒëƒÉng nh·∫≠p</p>
                    </div>
                    <button className="btn">Xem chi ti·∫øt</button>
                  </div>
                </div>

                {/* App Settings */}
                <div className="card">
                  <h3>üì± C√†i ƒë·∫∑t ·ª©ng d·ª•ng</h3>
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0', borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
                    <div>
                      <h4 style={{margin: '0'}}>Ng√¥n ng·ªØ</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>Ti·∫øng Vi·ªát</p>
                    </div>
                    <select style={{padding: '8px', borderRadius: '8px', background: 'rgba(255,255,255,0.1)', border: '1px solid rgba(255,255,255,0.2)', color: 'white'}}>
                      <option>Ti·∫øng Vi·ªát</option>
                      <option>English</option>
                    </select>
                  </div>
                  
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0', borderBottom: '1px solid rgba(255,255,255,0.1)'}}>
                    <div>
                      <h4 style={{margin: '0'}}>ƒê∆°n v·ªã ti·ªÅn t·ªá</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>VND (‚Ç´)</p>
                    </div>
                    <select style={{padding: '8px', borderRadius: '8px', background: 'rgba(255,255,255,0.1)', border: '1px solid rgba(255,255,255,0.2)', color: 'white'}}>
                      <option>VND (‚Ç´)</option>
                      <option>USD ($)</option>
                    </select>
                  </div>
                  
                  <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '12px 0'}}>
                    <div>
                      <h4 style={{margin: '0'}}>Ch·∫ø ƒë·ªô t·ªëi</h4>
                      <p className="muted" style={{margin: '0', fontSize: '13px'}}>Lu√¥n b·∫≠t ch·∫ø ƒë·ªô t·ªëi</p>
                    </div>
                    <label style={{position: 'relative', display: 'inline-block', width: '50px', height: '24px'}}>
                      <input type="checkbox" defaultChecked style={{opacity: 0, width: 0, height: 0}} />
                      <span style={{position: 'absolute', cursor: 'pointer', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: '#19c37d', borderRadius: '24px', transition: '0.4s'}}></span>
                    </label>
                  </div>
                </div>
              </div>
              
            </div>
          </div>
        </div>
      );
    }

    // Staff Dashboard (simplified)
    if (currentUser.role === 'staff') {
      return (
        <div className="dashboard active">
          <DashboardHeader />
          <div className="container">
            <div className="dashboard-content">
              <h2>üë• Dashboard Nh√¢n vi√™n</h2>
              <div className="stats-grid">
                <div className="card">
                  <h4>üîã Pin trong kho</h4>
                  <div className="price">45</div>
                  <p className="muted">8 pin ƒëang s·∫°c</p>
                </div>
                <div className="card">
                  <h4>‚ö° ƒê·ªïi pin h√¥m nay</h4>
                  <div className="price">23</div>
                  <p className="muted">+5 so v·ªõi h√¥m qua</p>
                </div>
                <div className="card">
                  <h4>üõ†Ô∏è S·ª± c·ªë</h4>
                  <div className="price">2</div>
                  <p className="muted">C·∫ßn x·ª≠ l√Ω</p>
                </div>
                <div className="card">
                  <h4>üìä Hi·ªáu su·∫•t</h4>
                  <div className="price">95%</div>
                  <p className="muted">Xu·∫•t s·∫Øc</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      );
    }

    // Admin Dashboard (simplified)
    if (currentUser.role === 'admin') {
      return (
        <div className="dashboard active">
          <DashboardHeader />
          <div className="container">
            <div className="dashboard-content">
              <h2>üëë Dashboard Qu·∫£n tr·ªã</h2>
              <div className="stats-grid">
                <div className="card">
                  <h4>üë• T·ªïng ng∆∞·ªùi d√πng</h4>
                  <div className="price">1,234</div>
                  <p className="muted">+50 tu·∫ßn n√†y</p>
                </div>
                <div className="card">
                  <h4>üè™ T·ªïng tr·∫°m</h4>
                  <div className="price">67</div>
                  <p className="muted">5 tr·∫°m m·ªõi</p>
                </div>
                <div className="card">
                  <h4>üí∞ Doanh thu th√°ng</h4>
                  <div className="price">2.5M</div>
                  <p className="muted">+15% so v·ªõi th√°ng tr∆∞·ªõc</p>
                </div>
                <div className="card">
                  <h4>‚ö° L∆∞·ª£t ƒë·ªïi pin</h4>
                  <div className="price">8,945</div>
                  <p className="muted">Th√°ng n√†y</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      );
    }
  };

  return (
    <div className="App">
      {currentView === 'landing' && <LandingPage />}
      {currentView === 'dashboard' && currentUser && <Dashboard />}
      <LoginModal />
      <RegisterModal />
    </div>
  );
}

export default App;